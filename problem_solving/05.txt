"Delete Node from RBT", 
"Write a function to delete a node from a Red-Black Tree and rebalance it.", 
"Hard", 
"GeeksforGeeks, Google"

----------------------------------

Problem Title: Delete Node from a Red-Black Tree

Problem Description:
Given a Red-Black Tree and a key, write a function to delete the node with the given key from the tree. After deletion, ensure that the Red-Black Tree properties are maintained. If the key is not present in the tree, the tree should remain unchanged.

Input Format:
- The first line contains an integer N, the number of nodes in the Red-Black Tree.
- The second line contains N space-separated integers, representing the keys of the nodes in level order traversal.
- The third line contains N space-separated characters, each being 'R' or 'B', representing the color (Red or Black) of each node in the same order as the keys.
- The fourth line contains an integer K, the key to be deleted.

Output Format:
- Print the level order traversal of the tree after deletion.
- Print the color of each node in the same order as the traversal, separated by spaces.

Constraints:
- 1 ≤ N ≤ 1000
- All keys are unique integers in the range [-10^5, 10^5]
- K is an integer in the range [-10^5, 10^5]

Sample Input:
7
10 5 20 3 7 15 25
B R R B B B B
7

Sample Output:
10 5 20 3 15 25
B R R B B B

Explanation:
The node with key 7 is deleted. The tree is rebalanced to maintain Red-Black Tree properties.

Difficulty:
Hard

Test Cases:
1.
Input:
7
10 5 20 3 7 15 25
B R R B B B B
7

Output:
10 5 20 3 15 25
B R R B B B

2.
Input:
5
8 4 12 2 6
B R R B B
4

Output:
8 6 12 2
B R R B

3.
Input:
3
1 2 3
B R R
2

Output:
1 3
B R

4.
Input:
6
15 10 20 8 12 17
B R R B B B
15

Output:
12 10 20 8 17
B R B B B

5.
Input:
4
7 3 18 10
B R R B
5

Output:
7 3 18 10
B R R B

----------------------------------
