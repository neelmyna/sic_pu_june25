"Insert in AVL Tree", 
"Implement insertion operation in an AVL tree and ensure the tree remains balanced after each insertion.", 
"Easy", 
"LeetCode, HackerRank"

----------------------------------

Problem Title:
Insert in AVL Tree

Problem Description:
Given an initially empty AVL (Adelson-Velsky and Landis) tree, implement the insertion operation. After each insertion, ensure the tree remains balanced according to AVL tree properties. An AVL tree is a self-balancing binary search tree where the difference between heights of left and right subtrees cannot be more than one for all nodes.

Input Format:
- The first line contains an integer n, the number of elements to insert.
- The second line contains n space-separated integers, representing the values to be inserted in the given order.

Output Format:
- Print the pre-order traversal of the AVL tree after all insertions.

Constraints:
- 1 ≤ n ≤ 1000
- -10^5 ≤ value ≤ 10^5
- All values are distinct.

Sample Input:
5
10 20 30 40 50

Sample Output:
20 10 40 30 50

Explanation:
After inserting all elements and balancing after each insertion, the pre-order traversal of the AVL tree is 20 10 40 30 50.

Difficulty:
Easy

Test Cases:
Test Case 1:
Input:
3
1 2 3
Output:
2 1 3

Test Case 2:
Input:
6
50 40 30 20 10 60
Output:
40 20 10 30 50 60

Test Case 3:
Input:
4
15 10 20 25
Output:
15 10 25 20

Test Case 4:
Input:
7
7 8 9 10 11 12 13
Output:
10 8 7 9 12 11 13

Test Case 5:
Input:
1
100
Output:
100

----------------------------------
